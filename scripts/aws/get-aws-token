#!/usr/bin/env sh

# Script to get AWS session access tokens

# Dependencies
# 1. jq
# 2. AWS CLI
# 3. awk
# 4. GNU date

tmp_store="aws_token.txt"
work_profile_path="$HOME/.work_profile"

# Maximum possible duration "36 hours" (129,600 seconds)
# Read: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html
duration="12 hours"
# convert to UNIX epoch and find appropriate expire limit
duration_seconds=$(( $(date -d "$duration" +%s) - $(date +%s) ))
aws_region="us-west-1"
now=$(date "+%d %B, %Y (%r)")


_pre_script(){
    # unexport any existing keys
    unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
}

_post_script(){
    # remove the temp file we created for storing keys
    rm "$tmp_store"
}

_get_token() {
    if aws sts get-session-token --duration-seconds "$duration_seconds" > "$tmp_store"; then
        AWS_ACCESS_KEY_ID=$(jq -r '.Credentials | {AccessKeyId} | join("")' < "$tmp_store")
        AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials | {SecretAccessKey} | join("")' < "$tmp_store")
        AWS_SESSION_TOKEN=$(jq -r '.Credentials | {SessionToken} | join("")' < "$tmp_store")
        EXPIRE_TIME=$(date --date="$(jq -r '.Credentials | {Expiration} | join("")' < "$tmp_store")" "+%d %B, %Y (%r)")

        {
            echo "export AWS_ACCESS_KEY_ID=\"${AWS_ACCESS_KEY_ID}"\"
            echo "export AWS_SECRET_ACCESS_KEY=\"${AWS_SECRET_ACCESS_KEY}"\"
            echo "export AWS_SESSION_TOKEN=\"${AWS_SESSION_TOKEN}"\"
            echo "export AWS_REGION=\"${aws_region}"\"

            echo "# Keys requested on $now"
            echo "# Keys valid till $EXPIRE_TIME"
        } > "$work_profile_path"

        printf "Expiring on %s\n" "$EXPIRE_TIME"
        printf "%s\n" "Exported as environment variables in $work_profile_path"
    fi
}

_pre_script
printf "%s\n" "Getting AWS Session Token"
_get_token
_post_script
